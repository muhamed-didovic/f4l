{"version":3,"sources":["api/league/league.controller.js"],"names":["index","show","create","upsert","patch","destroy","_","require","rp","getLiveDataWithBonus","playersObj","teamObj","bonusArr","transfer_cost","entry_history","event_transfers_cost","value","entry","bank","total_value","toFixed","total_transfers","gw_transfers","event_transfers","transfers_hit","team_id","id","picks","live_score","bonus_pts","playedstr","playednum","toplaystr","toplaynum","didntplaystr","didntplaynum","captain_dnp","firstxistr","subsstr","captain","vice_captain","vice_points","vice_captain_id","captain_id","captain_points","i","length","is_captain","is_vice","element","elements","second_name","points","is_vice_captain","is_sub","pts","multiplier","j","playerID","bonusPTS","has_played","stats","minutes","current_points","summary_overall_points","week_points","summary_event_points","live_total","dontIncludeCost","getBonusData","k","fixturesArr","finished","isEmpty","console","log","started","bonus","a","h","bpsArr","indx","bps_a","bps","bpsPTS","bps_h","minBP","bonus_pt","empty_pt","bonusData","sort","b","map","item","push","flatten","getChipsAndWildcards","lastGW","current_event","numChips","chips","chipsdetail","chipname","livechip","wildcardplayed","chip","name","event","wcimg","wctxt","color","options","method","simple","transform","body","response","resolveWithFullResponse","headers","error","JSON","parse","getChipsAndWildcard","url","gamer","resolve","reject","uri","then","team","catch","err","getGameData","players","playersWithBonuses","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","save","removeEntity","remove","end","handleEntityNotFound","handleError","send","req","gwnum","leagueId","users","fixtures","data","gwObj","events","filter","is_current","Error","games","standings","results","all","findById","params","exec","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"league.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/leagues              ->  index\n * POST    /api/leagues              ->  create\n * GET     /api/leagues/:id          ->  show\n * PUT     /api/leagues/:id          ->  upsert\n * PATCH   /api/leagues/:id          ->  patch\n * DELETE  /api/leagues/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport League from './league.model';\n\nconst _ = require('lodash');\nconst rp = require('request-promise');\n\nfunction getLiveDataWithBonus(playersObj, teamObj, bonusArr) {\n\n  bonusArr = bonusArr || [];\n  let transfer_cost = teamObj.entry_history.event_transfers_cost;\n  let value = (teamObj.entry.value * 100) / 1000;\n  let bank = (teamObj.entry.bank * 100) / 1000;\n  let total_value = value + bank;\n  value = value.toFixed(1);\n  bank = bank.toFixed(1);\n  total_value = total_value.toFixed(1);\n  let total_transfers = teamObj.entry.total_transfers;\n  let gw_transfers = teamObj.entry.event_transfers;\n  let transfers_hit = teamObj.entry.event_transfers_cost;\n\n  let team_id = teamObj.entry.id;\n  let picks = teamObj.picks;\n  let live_score = 0;\n  let bonus_pts = 0;\n\n  let playedstr = \"\";\n  let playednum = 0;\n  let toplaystr = \"\";\n  let toplaynum = 0;\n  let didntplaystr = \"\";\n  let didntplaynum = 0;\n\n  let captain_dnp = false;\n  let firstxistr = \"\";\n  let subsstr = \"\";\n\n  let captain, vice_captain, vice_points, vice_captain_id, captain_id, captain_points;\n  for (let i = 0; i < picks.length; i++) {\n    let is_captain = false;\n    let is_vice = false;\n    if (picks[i].is_captain == 1) {\n      captain_id = picks[i].element;\n      captain = playersObj.elements[captain_id - 1].second_name;\n      is_captain = true;\n      captain_points = picks[i].points;\n    }\n    if (picks[i].is_vice_captain == 1) {\n      vice_captain_id = picks[i].element;\n      vice_captain = playersObj.elements[vice_captain_id - 1].second_name;\n      is_vice = true;\n      vice_points = picks[i].points;\n    }\n    if (picks[i].is_sub != 1) {\n\n      if (firstxistr != \"\") {\n        firstxistr += \", \";\n      }\n      firstxistr += playersObj.elements[picks[i].element - 1].second_name;\n      if (is_captain) {\n        firstxistr += \" (C)\";\n      } else if (is_vice) {\n        firstxistr += \" (vc)\";\n      }\n\n      let pts = picks[i].points * picks[i].multiplier;\n\n      //bonus\n      //console.log('bonus array22', bonusArr);\n      for (let j = 0; j < bonusArr.length; j++) {\n        //bonus for finished matches\n        if (bonusArr[j].playerID == picks[i].element) {\n          bonus_pts = bonus_pts + bonusArr[j].bonusPTS * picks[i].multiplier;\n          // if (team_id === 289692){\n          //   console.log(bonus_pts, bonusArr[j].playerID, bonusArr[j].bonusPTS * picks[i].multiplier);\n          // }\n        }\n      }\n      live_score = live_score + pts /*+ bonus_pts*/;\n\n      if (picks[i].has_played == 1) {\n        if (picks[i].stats.minutes > 0) {\n          //has played\n          if (playedstr != \"\") {\n            playedstr += \", \";\n          }\n          playednum++;\n          playedstr += playersObj.elements[picks[i].element - 1].second_name;\n        } else {\n          //didnt play\n          if (didntplaystr != \"\") {\n            didntplaystr += \", \";\n          }\n          didntplaynum++;\n          didntplaystr += playersObj.elements[picks[i].element - 1].second_name;\n          if (is_captain) {\n            captain_dnp = true;\n          }\n        }\n      } else {\n        //to play\n        if (toplaystr != \"\") {\n          toplaystr += \", \";\n        }\n        toplaynum++;\n        toplaystr += playersObj.elements[picks[i].element - 1].second_name;\n      }\n    } else {\n      if (subsstr != \"\") {\n        subsstr += \", \";\n      }\n      subsstr += playersObj.elements[picks[i].element - 1].second_name;\n      if (is_captain) {\n        subsstr += \" (C)\";\n      } else if (is_vice) {\n        subsstr += \" (vc)\";\n      }\n    }\n  }//end for\n  let current_points = teamObj.entry.summary_overall_points;\n  let week_points = teamObj.entry.summary_event_points;\n  let live_total = (current_points - week_points) + live_score - (dontIncludeCost ? 0 : transfer_cost) + bonus_pts;\n\n  return {\n    value: value,\n    bank: bank,\n    total_value: total_value,\n    total_transfers: total_transfers,\n    gw_transfers: gw_transfers,\n    transfers_hit: transfers_hit,\n    captain: captain,\n    vice_captain: vice_captain,\n    live_score: live_score - (dontIncludeCost ? 0 : transfer_cost)  + bonus_pts,\n    live_total: live_total,\n    playednum: playednum,\n    playedstr: playedstr,\n    toplaynum: toplaynum,\n    toplaystr: toplaystr,\n    didntplaynum: didntplaynum,\n    didntplaystr: didntplaystr,\n    bonus_pts: bonus_pts,\n    transfer_cost,\n    current_points,\n    week_points,\n    team_id: teamObj.entry.id\n  };\n}\n\nlet dontIncludeCost = false;\n//find players with bonuses\nlet getBonusData = fixturesArr => {\n  //bonus\n  let bonusArr = [];\n\n  for (let k = 0; k < fixturesArr.length; k++) {\n\n    if (dontIncludeCost === false && fixturesArr[k].finished === true){\n      dontIncludeCost = true;\n    }\n\n    //todo: check bonus property better\n    if (_.isEmpty(fixturesArr[k].stats)) break;\n    console.log('BONUS', fixturesArr[k].stats[8], fixturesArr[k].started, !!fixturesArr[k].stats[8].bonus.a, fixturesArr[k].stats[8].bonus.h);\n    if (fixturesArr[k].started &&\n      _.isEmpty(fixturesArr[k].stats[8].bonus.a) &&\n      _.isEmpty(fixturesArr[k].stats[8].bonus.h)) {\n      let bpsArr = [];\n      let indx = 0;\n      let stats = fixturesArr[k].stats;\n      for (let i = 0; i < stats.length; i++) {\n        if (Object.keys(stats[i]) == \"bps\") {\n          // away team\n          let bps_a = stats[i].bps.a;\n          for (let j = 0; j < bps_a.length; j++) {\n            if (bps_a[j].value > 10) {\n              bpsArr[indx] = {playerID: bps_a[j].element, bpsPTS: bps_a[j].value};\n              indx++;\n            }\n          }\n          // home team\n          let bps_h = stats[i].bps.h;\n          for (let j = 0; j < bps_h.length; j++) {\n            if (bps_h[j].value > 10) {\n              bpsArr[indx] = {playerID: bps_h[j].element, bpsPTS: bps_h[j].value};\n              indx++;\n            }\n          }\n        }\n      }\n      // sorting\n      // bpsArr.sort(function (a, b) {\n      //   return b.bpsPTS - a.bpsPTS\n      // });\n      //console.log('bpsArr', bpsArr);\n      if (_.isEmpty(bpsArr) || bpsArr.length <= 4) break;\n      // add bonuses\n      let minBP = 3;\n      let bonus_pt = 3;\n      let empty_pt = 0;\n\n      //todo: filter players without bonus\n      let bonusData = bpsArr\n        .sort(function (a, b) {\n          return b.bpsPTS - a.bpsPTS\n        })\n        //.slice(0, 4)\n        .map((item, index) => {\n          let bonus = {playerID: bpsArr[index].playerID, bonusPTS: bonus_pt + empty_pt - index};\n          if (bpsArr[index].bpsPTS == bpsArr[index + 1].bpsPTS) {\n            empty_pt++;\n          } else {\n            empty_pt = 0;\n          }\n          return bonus;\n        });\n      bonusArr.push(bonusData);\n\n\n    }//end if\n  }//end for\n  //console.log('111', _.flatten(bonusArr));\n  return _.flatten(bonusArr);\n}\n\nfunction getChipsAndWildcards(teamObj) {\n  //let team_id = teamObj.entry.id;\n  let lastGW = teamObj.entry.current_event;\n\n  let numChips = teamObj.chips.length;\n  let chipsdetail = \"\";\n  let chipname = \"\";\n  let livechip = 0;\n\n  let wildcardplayed = false;\n\n  for (let i = 0; i < teamObj.chips.length; i++) {\n    let chip = teamObj.chips[i];\n    if (chip.name == \"3xc\") {\n      chipname = \"Triple Captain\";\n    } else if (chip.name == \"attack\") {\n      chipname = \"All Out Attack\";\n    } else if (chip.name == \"bboost\") {\n      chipname = \"Bench Boost\";\n    } else if (chip.name == \"wildcard\") {\n      chipname = \"Wildcard\";\n      wildcardplayed = true;\n    } else {\n      chipname = chip.name;\n    }\n    chipsdetail += chipname + \" (GW\" + chip.event + \")\\n\";\n    if (chip.event == lastGW) {\n      livechip = 1;\n    }\n  }\n\n  let wcimg, wctxt;\n  if (!wildcardplayed) {\n    wcimg = \"//upload.wikimedia.org/wikipedia/commons/thumb/0/03/Green_check.svg/13px-Green_check.svg.png\";\n    wctxt = \"Available\";\n  } else {\n    wcimg = \"//upload.wikimedia.org/wikipedia/en/thumb/b/ba/Red_x.svg/13px-Red_x.svg.png\";\n    wctxt = \"Played\";\n  }\n\n  return {\n    numChips,\n    color: (livechip ? 'pink' : ''),\n    chipsdetail,\n    livechip: livechip,\n    wildcardplayed: wildcardplayed,\n    wcimg: wcimg,\n    wctxt: wctxt\n  };\n}\n\nlet options = {\n  method: 'GET',\n  //uri: 'https://fantasy.premierleague.com/drf/leagues-classic-standings/' + leagueId,\n  //resolveWithFullResponse: true,\n  //json: true,\n  simple: true,\n  transform: function (body, response, resolveWithFullResponse) {\n    if (response.headers['content-type'] !== 'application/json') {\n      error.log('Not valid json');\n      //throw new Error('Transform failed!');\n      return;\n    }\n    return JSON.parse(body);\n  }\n};\n\nfunction getChipsAndWildcard(url, gamer) {\n  return new Promise((resolve, reject) => {\n    options.uri = url;\n    rp(options)\n      .then(team => {\n        gamer['chipsandwildcards'] = getChipsAndWildcards(team);\n        //console.log('1111', team);\n        return resolve(gamer);\n      })\n      .catch(err => reject(err));\n  });\n}\n\nfunction getGameData(url, gamer, players, playersWithBonuses) {\n  return new Promise((resolve, reject) => {\n    options.uri = url;\n    rp(options)\n      .then(team => {\n        //console.log('team', team.entry.id);\n        gamer['live_data'] = getLiveDataWithBonus(players, team, playersWithBonuses);\n        gamer['team'] = team;\n        //console.log(team);\n        //return team;\n        return resolve(gamer);\n      })\n      .catch(err => reject(err));\n  });\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Leagues\nexport function index(req, res) {\n  //todo: error handling and parameter checking\n  //todo: convert to promises and modular code\n  //todo: change static values\n  //todo: add error handling for accept/json in requests\n  let gwnum = 0;\n  let leagueId = 404;\n\n  let users, players, fixtures, playersWithBonuses;\n  options.uri = 'https://fantasy.premierleague.com/drf/leagues-classic-standings/' + leagueId;\n  rp(options)\n    .then(data => {\n      users = data;\n      //console.log('dddddd', data);\n      options.uri = 'https://fantasy.premierleague.com/drf/bootstrap-static';\n      return rp(options);\n    })\n    .then(data => {\n      //todo: error handling?\n      players = data;\n\n      //get current gameweek from players or bootstrap-static api\n      let gwObj = players.events.filter(function (event, index) {\n        return event.is_current;\n      });\n\n      if (!gwObj) {\n        throw new Error('Game week not define', {gwObj})\n      }\n\n      //add gameweek to gwnum so it available globally\n      gwnum = gwObj[0].id;\n\n      //get bonus data from api\n      options.uri = \"https://fantasy.premierleague.com/drf/fixtures/?event=\" + gwnum;\n      return rp(options);\n    })\n    .then(data => {\n      fixtures = data;\n\n      //todo: error handling, aslo check method for error handling?\n      playersWithBonuses = getBonusData(fixtures);\n      console.log('playersWithBonuses', playersWithBonuses);\n      console.log('dontIncludeCost', dontIncludeCost);\n      let games = users.standings.results.map(function (gamer) {\n        //todo: error handling, aslo check method for error handling?\n        let data = getGameData(\"https://fantasy.premierleague.com/drf/entry/\" + gamer.entry + \"/event/\" + gwnum, gamer, players, playersWithBonuses);\n        data['chipsAndWildcards'] = getChipsAndWildcard(\"https://fantasy.premierleague.com/drf/entry/\" + gamer.entry + \"/history\", gamer);\n        return data;\n      });\n\n      //todo: error handling for games\n      return Promise.all(games)\n        .then(data => {\n          //console.log('asdasdas', data);\n          users.standings.results = data;\n          return res.json(users);\n        })\n    })\n    .catch(handleError(res));\n}\n\n// Gets a single League from the DB\nexport function show(req, res) {\n  return League.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new League in the DB\nexport function create(req, res) {\n  return League.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given League in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return League.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing League in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return League.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a League from the DB\nexport function destroy(req, res) {\n  return League.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}